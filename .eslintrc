{
    "root": true,
    "parser": "@typescript-eslint/parser",
    "plugins": [
        "@typescript-eslint"
    ],
    "extends": [
        "eslint:recommended",
        "plugin:@typescript-eslint/eslint-recommended",
        "plugin:@typescript-eslint/recommended"
    ],
    "rules": {
        "@typescript-eslint/no-unused-vars": [
            "error",
            {
                "args": "all",
                "argsIgnorePattern": "^_",
                "caughtErrors": "all",
                "caughtErrorsIgnorePattern": "^_",
                "destructuredArrayIgnorePattern": "^_",
                "varsIgnorePattern": "^_",
                "ignoreRestSiblings": true
            }
        ],
        "@typescript-eslint/naming-convention": [
              "error",

              {
                "selector": "default",
                "format": ["camelCase"]
              },

              {
                "selector": "typeParameter",
                "format": ["UPPER_CASE"]
              },

              {
                "selector": "variable",
                "format": ["camelCase"]
              },

              {
                "selector": "interface",
                "format": ["PascalCase"]
              },

              {
                "selector": "typeAlias",
                "format": ["PascalCase"]
              },

              {
                "selector": "property",
                "format": ["camelCase"],
                "leadingUnderscore": "allow"
              },

              {
                "selector": "function",
                "format": ["camelCase"]
              },

              {
                "selector": "enum",
                "format": ["PascalCase"]
              },

              {
                "selector": "enumMember",
                "format": ["UPPER_CASE"]
              },

              {
                "selector": "classMethod",
                "format": ["camelCase"]
              },

              {
                "selector": "classProperty",
                "format": ["camelCase"],
                "leadingUnderscore": "allow"
              },

              {
                "selector": "objectLiteralProperty",
                "leadingUnderscore": "allow",
                "format": ["camelCase"]
              },

              {
                "selector": "objectLiteralMethod",
                "format": ["camelCase"]
              },

              {
                "selector": "import",
                "format": ["camelCase", "PascalCase"]
              },

              {
                "selector": "class",
                "format": ["PascalCase"]
              }
        ],
        "@typescript-eslint/no-duplicate-enum-values": "error",
        "@typescript-eslint/no-empty-function": "error",
        "@typescript-eslint/no-empty-interface": "error",
        "@typescript-eslint/no-require-imports": "error",
        "max-params": ["error", { 
            "max": 3 
            }
        ],
        "quotes": ["error", "double", { 
            "allowTemplateLiterals": true,
            "avoidEscape": true  
            }
        ],
        "no-console": ["Error"]
    },
    "env": {
        "node": true
    }
}